{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAG3C,SAASG,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,YAAW,KACTC,QAAQC,QAAQ,CAAEC,SAAAP,EAAUQ,MAAAP,IAASQ,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACrDE,EAAAlB,GAASmB,OAAOC,QACd,uBAAqBL,QAAiBC,MAAU,GAElD,GACDP,GAEHG,YAAW,KACTC,QAAQQ,OAAO,CAAEN,SAAAP,EAAUQ,MAAAP,IAASa,OAAM,EAACP,SAAEA,EAAQC,MAAEA,MACrDE,EAAAlB,GAASmB,OAAOI,QACd,sBAAoBR,QAAiBC,MAAU,GAEjD,GACDP,E,CAnBMN,SAASC,cAAc,SAuB/BoB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,IAAIC,EAAeC,OAAO1B,EAAW2B,OACjCC,EAAYF,OAAOvB,EAAUwB,OAC7BE,EAAmBH,OAAOtB,EAAYuB,OAE1C,GAAIF,EAAe,GAAKG,EAAY,GAAKC,EAAmB,EAC1Db,EAAAlB,GAASmB,OAAOa,QAAQ,yCAExB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAkBE,IAAK,CAGzC1B,EAFe0B,EAAI,EACPN,EAAeG,EAAYG,E,CAK3CR,EAAMS,cAAcC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    setTimeout(() => {\n      Promise.resolve({ position, delay }).then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      });\n    }, delay);\n  } else {\n    setTimeout(() => {\n      Promise.reject({ position, delay }).catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    }, delay);\n  }\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let promiseDelay = Number(delayInput.value);\n  let delayStep = Number(stepInput.value);\n  let amountOfPrimises = Number(amountInput.value);\n\n  if (promiseDelay < 0 || delayStep < 0 || amountOfPrimises < 0) {\n    Notiflix.Notify.warning(`❗ Please enter a positive number`);\n  } else {\n    for (let i = 0; i < amountOfPrimises; i++) {\n      let position = i + 1;\n      let delay = promiseDelay + delayStep * i;\n      createPromise(position, delay);\n    }\n  }\n\n  event.currentTarget.reset();\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delayInput","document","querySelector","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position1","delay1","Math","random","setTimeout","Promise","resolve","position","delay","then","$parcel$interopDefault","Notify","success","reject","catch","failure","addEventListener","event","preventDefault","promiseDelay","Number","value","delayStep","amountOfPrimises","warning","i","currentTarget","reset"],"version":3,"file":"03-promises.c035f052.js.map"}