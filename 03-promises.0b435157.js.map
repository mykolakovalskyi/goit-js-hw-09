{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,kBACpCC,EAAYF,SAASC,cAAc,iBACnCE,EAAcH,SAASC,cAAc,mBAG3C,SAASG,EAAcC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,YAAW,WACTC,QAAQC,QAAQ,CAAEN,WAAUC,UAASM,MAAK,SAAAC,G,IAAGC,EAAQD,EAARR,SAAUU,EAAKF,EAALP,MACrDU,EAAAnB,GAASoB,OAAOC,QACd,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,MAGjDT,GAEHG,YAAW,WACTC,QAAQU,OAAO,CAAEf,WAAUC,UAASe,OAAM,SAAAR,G,IAAGC,EAAQD,EAARR,SAAUU,EAAKF,EAALP,MACrDU,EAAAnB,GAASoB,OAAOK,QACd,sBAAuCH,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,MAGhDT,E,CAnBMN,SAASC,cAAc,SAuB/BsB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACN,IAAIC,EAAeC,OAAO5B,EAAW6B,OACjCC,EAAYF,OAAOzB,EAAU0B,OAC7BE,EAAmBH,OAAOxB,EAAYyB,OAE1C,GAAIF,EAAe,GAAKG,EAAY,GAAKC,EAAmB,EAC1Dd,EAAAnB,GAASoB,OAAOc,QAAS,yCAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAkBE,IAAK,CAGzC5B,EAFe4B,EAAI,EACPN,EAAeG,EAAYG,E,CAK3CR,EAAMS,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    setTimeout(() => {\n      Promise.resolve({ position, delay }).then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      });\n    }, delay);\n  } else {\n    setTimeout(() => {\n      Promise.reject({ position, delay }).catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    }, delay);\n  }\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  let promiseDelay = Number(delayInput.value);\n  let delayStep = Number(stepInput.value);\n  let amountOfPrimises = Number(amountInput.value);\n\n  if (promiseDelay < 0 || delayStep < 0 || amountOfPrimises < 0) {\n    Notiflix.Notify.warning(`❗ Please enter a positive number`);\n  } else {\n    for (let i = 0; i < amountOfPrimises; i++) {\n      let position = i + 1;\n      let delay = promiseDelay + delayStep * i;\n      createPromise(position, delay);\n    }\n  }\n\n  event.currentTarget.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInput","document","querySelector","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","setTimeout","Promise","resolve","then","param","_$position","_$delay","$parcel$interopDefault","Notify","success","concat","reject","catch","failure","addEventListener","event","preventDefault","promiseDelay","Number","value","delayStep","amountOfPrimises","warning","i","currentTarget","reset"],"version":3,"file":"03-promises.0b435157.js.map"}